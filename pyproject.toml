[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nelson-siegel-model"
version = "1.0.0"
description = "Nelson-Siegel Model for Yield Curve Analysis with Treasury and TIPS data"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Economics Research Team", email = "research@example.com"}
]
keywords = ["finance", "yield-curve", "nelson-siegel", "treasury", "tips", "economics"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial",
    "Topic :: Scientific/Engineering :: Mathematics",
]

dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0", 
    "scipy>=1.7.0",
    "matplotlib>=3.4.0",
    "requests>=2.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.9",
    "mypy>=0.910",
    "isort>=5.9",
    "pre-commit>=2.15",
]
interactive = [
    "ipywidgets>=7.6.0",
    "jupyter>=1.0.0", 
    "jupyterlab>=3.0.0",
    "notebook>=6.0.0",
    "nbformat>=5.0.0",
]
data = [
    "fredapi>=0.4.3",
    "quandl>=3.7.0",
    "alpha-vantage>=2.3.1",
    "yfinance>=0.1.87",
]
notebooks = [
    "ipywidgets>=7.6.0",
    "jupyter>=1.0.0",
    "jupyterlab>=3.0.0", 
    "notebook>=6.0.0",
    "nbformat>=5.0.0",
    "jupyter-widgets>=7.6.0",
    "fredapi>=0.4.3",
]

[project.urls]
Homepage = "https://github.com/economics-research/nelson-siegel-model"
Documentation = "https://nelson-siegel-model.readthedocs.io/"
Repository = "https://github.com/economics-research/nelson-siegel-model.git"
"Bug Tracker" = "https://github.com/economics-research/nelson-siegel-model/issues"

[project.scripts]
nelson-siegel-analysis = "nelson_siegel.analysis:main"

[tool.setuptools]
packages = ["nelson_siegel"]
package-dir = {"" = "src"}

[tool.setuptools.package-data]
nelson_siegel = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "scipy.*",
    "matplotlib.*",
    "yfinance.*",
    "fredapi.*",
    "quandl.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=nelson_siegel_model",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["nelson_siegel_model"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 100
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".venv",
    ".mypy_cache",
    ".pytest_cache",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]

